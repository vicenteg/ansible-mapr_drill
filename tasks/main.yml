---
# tasks file for mapr_drill

- name: install mapr-drill
  yum: name="mapr-drill-{{drill_version}}.{{drill_build}}" state=present
  become: yes
  become_user: root
  environment: '{{proxy_env}}'
  notify: reconfigure roles

- name: register zookeeper 
  become: yes
  become_user: '{{mapr_admin_username}}'
  command: maprcli node listzookeepers -noheader
  register: zookeepers
  changed_when: false

- name: configure zookeepers
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile:
    dest: /opt/mapr/drill/drill-{{drill_version}}/conf/drill-override.conf
    line: 'zk.connect: "{{zookeepers.stdout|trim}}"'
    regexp: zk.connect
    state: present
  register: zookeepers_added

# XXX: Adding as a single line is not as good as parsing the HOCON
# XXX: and writing it back out, perhaps in a hocon module. But pyhocon
# XXX: does not support a syntax that drill uses liberally, so we cannot
# XXX: yet parse the drill config.
- name: enable impersonation
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile:
    dest: /opt/mapr/drill/drill-{{drill_version}}/conf/drill-override.conf
    line: "drill.exec.impersonation: { enabled: true, max_chained_user_hops: 3 }"
    state: present
  when: secure_cluster is defined and secure_cluster == True
  register: impersonation_configured

- name: enable SSL for drillbit web UI
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile:
    dest: /opt/mapr/drill/drill-{{drill_version}}/conf/drill-override.conf
    line: "drill.exec.http: { ssl_enabled: true }"
    state: present
  when: secure_cluster is defined and secure_cluster == True

- name: create MapR FS pstore
  become: yes
  become_user: '{{mapr_admin_username}}'
  run_once: yes
  command: hadoop fs -mkdir -p /apps/drill/pstore

- name: enable MapR FS pstore
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile:
    dest: /opt/mapr/drill/drill-{{drill_version}}/conf/drill-override.conf
    line: 'drill.exec.sys.store.provider.zk.blobroot: "maprfs:///apps/drill/pstore/"'
    regexp: "drill.exec.sys.store.provider.zk.blobroot"
    state: present

- name: create jpam library directory
  become: yes
  become_user: root
  file: path=/opt/jpam state=directory mode=0755 owner='{{mapr_admin_username}}'

- name: link to MapR JPam libs
  become: yes
  become_user: '{{mapr_admin_username}}'
  file: src=/opt/mapr/lib/{{item}} dest=/opt/jpam/{{item}} state=link
  with_items:
    - libjpam.so
    - JPam-1.1.jar
  register: jpam_linked

- name: add java.library.path to drill-env.sh
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile: dest=/opt/mapr/drill/drill-{{drill_version}}/conf/drill-env.sh line='export DRILLBIT_JAVA_OPTS=" -Djava.library.path=/opt/jpam"' regexp='java.library.path' state=present
  register: jpam_added

- name: enable PAM authentication
  become: yes
  become_user: '{{mapr_admin_username}}'
  lineinfile:
    dest: /opt/mapr/drill/drill-{{drill_version}}/conf/drill-override.conf
    regexp: pam_profiles
    line: 'drill.exec { security.user.auth { enabled: true, packages += "org.apache.drill.exec.rpc.user.security", impl: "pam", pam_profiles: [ "login","sudo","sshd","password-auth" ] } }'
    state: present
  register: pam_enabled
  when: secure_cluster is defined and secure_cluster == True

#- name: start drillbits now
#  become_user: '{{mapr_admin_username}}'
#  command: maprcli node services -action start -name drill-bits -nodes {{ansible_fqdn}}

- name: pause for a bit
  pause: seconds=30

- name: restart drillbits now
  become: yes
  become_user: '{{mapr_admin_username}}'
  command: maprcli node services -action restart -name drill-bits -nodes {{ansible_fqdn}}
#  when: pam_enabled|changed or jpam_added|changed or jpam_linked|changed or impersonation_configured|changed or zookeepers_added|changed

- name: wait for drillbits to come up
  wait_for: port=8047 delay=10 timeout=60

- name: create hive storage plugin json file
  become: yes
  become_user: '{{mapr_admin_username}}'
  template: src=hive-storage-plugin.json.j2 dest=/tmp/hive-storage-plugin.json mode=0644
  when: hive_enabled is defined and hive_enabled == True

- name: log in to drillbit
  command: curl -c .drillbit_cookies -k -f -X POST -d j_username={{mapr_admin_username|default("mapr")}} -d j_password={{maprlogin_clear_pw|default("mapr")}} https://localhost:8047/j_security_check
  run_once: true
  when: hive_enabled and secure_cluster is defined and secure_cluster == True

- name: add hive storage plugin (SSL)
  command: 'curl -b .drillbit_cookies -k -f -H "Content-Type: application/json" -X POST -d @/tmp/hive-storage-plugin.json https://localhost:8047/storage/hive.json'
  run_once: true
  when: hive_enabled is defined and hive_enabled == True and secure_cluster is defined and secure_cluster == True

- name: add hive storage plugin (no SSL)
  shell: 'curl -f -H "Content-Type: application/json" -X POST -d @/tmp/hive-storage-plugin.json http://localhost:8047/storage/hive.json'
  run_once: true
  when: hive_enabled is defined and hive_enabled == True and (secure_cluster is not defined or secure_cluster == False)

